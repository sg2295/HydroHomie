
import java.awt.Color;
import java.awt.event.ItemEvent;
import java.text.SimpleDateFormat;
import java.util.Date;

/**
 * Creates the add goal window
 * @author Joe
 */
public class AddGoalGUI extends javax.swing.JFrame {

    /**
     * MainPage from where the add goal window was called
     */
    private MainPageGUI mainPage;

    /**
     * Used to check whether a new goal is being added or an existing one is 
     * being edited
     */
    private boolean editFlag;

    /**
     * Creates an add goal window.
     *
     * @param mainPage Main window from where it was called
     */
    public AddGoalGUI(MainPageGUI mainPage) {
        this.mainPage = mainPage;
        this.editFlag = false;
        initComponents();
        this.errorLabel.setForeground(Color.red);
        this.volumeTextField.setText("0.0"); // Set Default goal volume
    }

    /**
     * Creates an add goal window to edit an existing goal.
     *
     * @param mainPage Main window from where it was called
     * @param editFlag Boolean indicating edit of an existing goal
     */
    public AddGoalGUI(MainPageGUI mainPage, boolean editFlag) {
        this(mainPage); // Calls above constructor
        this.editFlag = editFlag;
        this.volumeTextField.setText(String.valueOf(this.mainPage.getUser().getCurrentDailyGoal().getGoal())); // Gets the existing goal value
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newGoalPanel = new javax.swing.JPanel();
        typeLabel = new javax.swing.JLabel();
        goalLabel = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox<>();
        addButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        errorLabel = new javax.swing.JLabel();
        volumeTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HydroHomie - Add Goal");

        newGoalPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("New Goal"));

        typeLabel.setText("Type");

        goalLabel.setText("Volume");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Daily", "Weekly" }));
        typeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                typeComboBoxItemStateChanged(evt);
            }
        });
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        clearButton.setText("CLEAR");
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        exitButton.setText("EXIT");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        volumeTextField.setText("0.0");
        volumeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volumeTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newGoalPanelLayout = new javax.swing.GroupLayout(newGoalPanel);
        newGoalPanel.setLayout(newGoalPanelLayout);
        newGoalPanelLayout.setHorizontalGroup(
            newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGoalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(newGoalPanelLayout.createSequentialGroup()
                            .addComponent(goalLabel)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(volumeTextField))
                        .addGroup(newGoalPanelLayout.createSequentialGroup()
                            .addComponent(typeLabel)
                            .addGap(18, 18, 18)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(errorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        newGoalPanelLayout.setVerticalGroup(
            newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newGoalPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newGoalPanelLayout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(clearButton)
                        .addGap(18, 18, 18)
                        .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(exitButton)
                            .addComponent(errorLabel)))
                    .addGroup(newGoalPanelLayout.createSequentialGroup()
                        .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(typeLabel)
                            .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(newGoalPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(goalLabel)
                            .addComponent(volumeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGoalPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newGoalPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
		setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Generate and add new goal to user.
     *
     * @param evt Event triggering the action
     */
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        // Check that given input is valid
        if (!this.checkVolume() || !this.checkValidDate()) {
            return;
        }

        // Add new goal to user
        this.mainPage.addGoalToUser(Float.parseFloat(this.volumeTextField.getText()), this.typeComboBox.getSelectedItem().toString().toUpperCase());
        this.moveToMainWindow(); // Move back to main window
    }//GEN-LAST:event_addButtonActionPerformed

    /**
     * Clears user input and resets components to their default values
     *
     * @param evt Event triggering the action
     */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // Set all components to their default states / values
        this.volumeTextField.setText("0.0");
        this.typeComboBox.setSelectedIndex(0);
        this.errorLabel.setText(""); // remove existing error message
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * Move back to main window.
     *
     * @param evt Event triggering the action
     */
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        // Move back to main window
        this.moveToMainWindow();
    }//GEN-LAST:event_exitButtonActionPerformed

    private void volumeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volumeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_volumeTextFieldActionPerformed

    private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_typeComboBoxActionPerformed

    /**
     * Update volume field with existing daily/weekly goal value.
     *
     * @param evt Event triggering the action
     */
    private void typeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_typeComboBoxItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) { // Check that the user changed the selected item
            if (evt.getItem().toString().equals("Daily")) {
                // Set the volume to the existing daily goal volume
                this.volumeTextField.setText(String.valueOf(this.mainPage.getUser().getCurrentDailyGoal().getGoal()));
            } else {
                // Set the volume to the existing weekly goal volume
              if (this.mainPage.getUser().currentWeeklyGoal != null) {
                    this.volumeTextField.setText(String.valueOf(this.mainPage.getUser().currentWeeklyGoal.getGoal()));
                }
            }
        }
    }//GEN-LAST:event_typeComboBoxItemStateChanged

    /**
     * Checks that the given data is of valid format (MM dd yyyy)
     * @return True if date is in valid format, false otherwise
     */
    private boolean checkValidDate() {
        if (!editFlag) {
            if (this.mainPage.getUser().doesDailyGoalExist(new Date()) && this.typeComboBox.getSelectedItem().toString().equals("Daily")) {
                this.errorLabel.setText("Goal already exists for: " + (new SimpleDateFormat("MMM dd yyyy").format(new Date())));
                return false;
            }
        }
        return true;
    }
    
    /**
     * Checks that input volume is a positive number. Prints error message if
     * volume is not acceptable.
     *
     * @return True if it is a positive number, false otherwise
     */
    private boolean checkVolume() {
        boolean validFlag = true;
        String volumeStr = this.volumeTextField.getText();
        float volume = 0;

        // Attempt to convert String value to float
        try {
            volume = Float.parseFloat(volumeStr);
        } catch (NumberFormatException e) {
            validFlag = false;
            System.err.println("Invalid volume entered.");
        }

        // Check that the value of the volume is positive
        if (volume <= 0) {
            validFlag = false;
        }

        // Update error label
        if (validFlag) {
            this.errorLabel.setText("");
        } else {
            this.errorLabel.setText("Given volume value is invalid, try again.");
        }

        return validFlag;
    }

    /**
     * Closes the add goal window and opens the main window.
     */
    private void moveToMainWindow() {
        this.setVisible(false); // Hide this window
        this.mainPage.setVisible(true); // Reveal main window
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddGoalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddGoalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddGoalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddGoalGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddGoalGUI(new MainPageGUI()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel errorLabel;
    private javax.swing.JButton exitButton;
    private javax.swing.JLabel goalLabel;
    private javax.swing.JPanel newGoalPanel;
    private javax.swing.JComboBox<String> typeComboBox;
    private javax.swing.JLabel typeLabel;
    private javax.swing.JTextField volumeTextField;
    // End of variables declaration//GEN-END:variables
}
